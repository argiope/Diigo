<?php
/**
 * @file
 * Diigo install/uninstall functions
 */

/**
 * Implmentation of hook_schema
 */
function diigo_schema(){
  $schema['diigo'] = array(
    'description' => 'settings for the Diigo module',
    'fields' => array(
      'aid' => array(
        'description' => 'this is the application id for the diigo app',
        'type' => 'serial',
        'unsigned' => TRUE,
        'size' => 'big',
        'not null' => TRUE,
      ),
      'api_key' => array(
        'description' => 'this is your diigo api key',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
      ),
      'count' => array(
        'description' => 'optional, number, the number of bookmarks to fetch, defaults to 10, max:100',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'unique keys' => array(
      'aid' => array('aid')
    ),
  );
  $schema['diigo_bookmarks'] = array(
    'description' => 'Diigo Cached Bookmarks',
    'fields' => array(
      'bid' => array(
        'description' => 'Bookmark ID',
        'type' => 'serial',
        'unsigned' => TRUE,
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Drupal User id',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'updated_at' => array(
        'description' => 'Bookmark updated at',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'url' => array(
        'description' => 'URL of bookmark',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'tags' => array(
        'description' => 'tags associated with the bookmark',
        'type' => 'varchar',
        'length' => '512',
        'not null' => TRUE,
      ),
      'created_at' => array(
        'description' => 'Bookmark creation time',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'Bookmark title',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'desc' => array(
        'description' => 'description of bookmark',
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,
      ),
    ),
    'unique keys' => array(
      'bid' => array('bid')
    ),
  );
  $schema['diigo_users'] = array(
    'description' => 'Saves the user name and passwords for diigo.',
    'fields' => array(
      'id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'serial',
        'unsigned' => TRUE,
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Drupal User ID',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'user' => array(
        'description' => 'Diigo Username',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
      ),
      'pass' => array(
        'description' => 'Diigo Password',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
      ),
      'list' => array(
        'description' => 'optional, string, the list name of a bookmark list, when specified, user must be also specified',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'sort' => array(
        'description' => 'optional, number 0-3, determines the order of bookmarks to fetch, 0: created_at, 1: updated_at, 2: popularity, 3: hot, defaults to 0',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'tags' => array(
        'description' => 'optional, string, only bookmarks with specified tags will be returned. multiple tags are separated by comma',
        'type' => 'varchar',
        'length' => '512',
        'not null' => TRUE,
      ),
      'filter' => array(
        'description' => 'optional, string, public: only returns public bookmarks; all: returns all bookmarks including private ones, defaults to public',
        'type' => 'varchar',
        'length' => '7',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'id' => array('id'),
      'uid' => array('uid')
    ),
  );
  return $schema;
}
/**
* Implements hook_uninstall().
*/
function diigo_uninstall() {
  //drop the diigo tables
  db_drop_table('diigo');
  db_drop_table('diigo_users');
  db_drop_table('diigo_bookmarks');
}

